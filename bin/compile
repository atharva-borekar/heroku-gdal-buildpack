#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Clean up leaking environment
unset GIT_DIR

# Parameters
BUILD_DIR="$1"
CACHE_DIR="${2}/${STACK}"

echo "-----> Creating .profile.d"
# Setup profile file
mkdir -p "$BUILD_DIR/.profile.d"
echo "-----> Created .profile.d"

# Functions
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Function to download and extract files
function download_and_extract() {
  local url="$1"
  local target_dir="$2"
  local flag="$3"

  echo "Downloading and extracting $url to $target_dir"
  
  # Create the target directory if it doesn't exist
  mkdir -p "$target_dir" || {
    echo "Error: Failed to create directory $target_dir"
    exit 1
  }
  
  # Try downloading the file and extract
  if ! curl -L "$url" | tar "$flag" -C "$target_dir" --strip-components=1; then
    echo "Error: Failed to download or extract $url"
    exit 1
  fi
}

# Function to set environment variables
function export_variable() {
  echo "export $1=\"$2\"" >> "$BUILD_DIR/.profile.d/geo.sh"
}

# Download and extract GDAL
echo "-----> Downloading and vendoring GDAL"
download_and_extract "https://download.osgeo.org/gdal/3.8.5/gdal-3.8.5.tar.gz" "$BUILD_DIR/.heroku/vendor/gdal" "xz"

# Download and extract GEOS
echo "-----> Downloading and vendoring GEOS"
download_and_extract "https://download.osgeo.org/geos/geos-3.11.2.tar.bz2" "$BUILD_DIR/.heroku/vendor/geos" "xj"

# Download and extract Proj
echo "-----> Downloading and vendoring Proj"
download_and_extract "https://download.osgeo.org/proj/proj-9.4.0.tar.gz" "$BUILD_DIR/.heroku/vendor/proj" "xz"

# Set environment variables
export_variable "GEOS_LIBRARY_PATH" "$BUILD_DIR/.heroku/vendor/lib"
export_variable "GDAL_LIBRARY_PATH" "$BUILD_DIR/.heroku/vendor/lib"
export_variable "PROJ4_LIBRARY_PATH" "$BUILD_DIR/.heroku/vendor/lib"
export_variable "GDAL_DATA" "$BUILD_DIR/.heroku/vendor/share/gdal"
export_variable "BUNDLE_BUILD__RGEO" "--with-opt-dir=$BUILD_DIR/.heroku/vendor --with-geos-config=$BUILD_DIR/.heroku/vendor/bin/geos-config"
export_variable "LIBRARY_PATH" "$BUILD_DIR/.heroku/vendor/lib"
export_variable "LD_LIBRARY_PATH" "$BUILD_DIR/.heroku/vendor/lib"
export_variable "CPATH" "$BUILD_DIR/.heroku/vendor/include"
export_variable "PATH" "$BUILD_DIR/.heroku/vendor/bin:\$PATH"

echo "-----> Vendoring geo libraries done"
