#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Clean up leaking environment
unset GIT_DIR

# Parameters
BUILD_DIR="$1"
CACHE_DIR="${2}/${STACK}"
BP_DIR=$(cd "$(dirname "${0:-}")"; cd .. || exit; pwd)

# Setup profile file
PROFILE_PATH="$BUILD_DIR/.profile.d/geo.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"

# Functions
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Function to download and extract files
function download_and_extract() {
  local url="$1"
  local target_dir="$2"
  local flag="$3"

  echo "Downloading and extracting $url to $target_dir"
  
  # Create the target directory if it doesn't exist
  mkdir -p "$target_dir" || {
    echo "Error: Failed to create directory $target_dir"
    exit 1
  }
  
  # Try downloading the file and extract
  if ! curl -L "$url" | tar flag -C "$target_dir" --strip-components=1; then
    echo "Error: Failed to download or extract $url"
    exit 1
  fi
}

# Download and extract GDAL
echo "-----> Downloading and vendoring GDAL"
download_and_extract "https://download.osgeo.org/gdal/3.8.5/gdal-3.8.5.tar.gz" "$BUILD_DIR/vendor/gdal" "xz"

# Download and extract GEOS
echo "-----> Downloading and vendoring GEOS"
download_and_extract "https://download.osgeo.org/geos/geos-3.11.2.tar.bz2" "$BUILD_DIR/vendor/geos" "xj"

# Download and extract Proj
echo "-----> Downloading and vendoring Proj"
download_and_extract "https://download.osgeo.org/proj/proj-9.4.0.tar.gz" "$BUILD_DIR/vendor/proj" "xz"

# Target vendor directory
TARGET_VENDOR_DIR=".heroku/vendor"

# Copy artifacts to the app directory
mkdir -p "$BUILD_DIR/$TARGET_VENDOR_DIR"
cp -r "$BUILD_DIR/vendor"/* "$BUILD_DIR/$TARGET_VENDOR_DIR"

# App directories
APP_VENDOR="/app/$TARGET_VENDOR_DIR"

# Set environment variables
echo "export GEOS_LIBRARY_PATH=\"$APP_VENDOR/lib\"" >> "$PROFILE_PATH"
echo "export GDAL_LIBRARY_PATH=\"$APP_VENDOR/lib\"" >> "$PROFILE_PATH"
echo "export PROJ4_LIBRARY_PATH=\"$APP_VENDOR/lib\"" >> "$PROFILE_PATH"
echo "export GDAL_DATA=\"$APP_VENDOR/share/gdal\"" >> "$PROFILE_PATH"

# Export environment variables for the next build
echo "BUNDLE_BUILD__RGEO=\"--with-opt-dir=$TARGET_VENDOR_DIR --with-geos-config=$TARGET_VENDOR_DIR/bin/geos-config\"" >> "$BP_DIR/export"
echo "export BUNDLE_BUILD__RGEO" >> "$PROFILE_PATH"
echo "export LIBRARY_PATH=\"$APP_VENDOR/lib\"" >> "$PROFILE_PATH"
echo "export LD_LIBRARY_PATH=\"$APP_VENDOR/lib\"" >> "$PROFILE_PATH"
echo "export CPATH=\"$APP_VENDOR/include\"" >> "$PROFILE_PATH"
echo "export PATH=\"$APP_VENDOR/bin:\$PATH\"" >> "$PROFILE_PATH"

echo "-----> Vendoring geo libraries done"
